<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ctgu.examination_system.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.ctgu.examination_system.entity.Teacher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="gendar" property="gendar" jdbcType="SMALLINT" />
    <result column="birth_date" property="birthDate" jdbcType="TIMESTAMP" />
    <result column="enter_date" property="enterDate" jdbcType="TIMESTAMP" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, teacher_id, username, gendar, birth_date, enter_date, degree, title, department_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ctgu.examination_system.entity.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ctgu.examination_system.entity.TeacherExample" >
    delete from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ctgu.examination_system.entity.Teacher" >
    insert into teacher (id, teacher_id, username, 
      gendar, birth_date, enter_date, 
      degree, title, department_id
      )
    values (#{id,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{gendar,jdbcType=SMALLINT}, #{birthDate,jdbcType=TIMESTAMP}, #{enterDate,jdbcType=TIMESTAMP}, 
      #{degree,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ctgu.examination_system.entity.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="gendar != null" >
        gendar,
      </if>
      <if test="birthDate != null" >
        birth_date,
      </if>
      <if test="enterDate != null" >
        enter_date,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="gendar != null" >
        #{gendar,jdbcType=SMALLINT},
      </if>
      <if test="birthDate != null" >
        #{birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enterDate != null" >
        #{enterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ctgu.examination_system.entity.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update teacher
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.gendar != null" >
        gendar = #{record.gendar,jdbcType=SMALLINT},
      </if>
      <if test="record.birthDate != null" >
        birth_date = #{record.birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enterDate != null" >
        enter_date = #{record.enterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.degree != null" >
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null" >
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      gendar = #{record.gendar,jdbcType=SMALLINT},
      birth_date = #{record.birthDate,jdbcType=TIMESTAMP},
      enter_date = #{record.enterDate,jdbcType=TIMESTAMP},
      degree = #{record.degree,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ctgu.examination_system.entity.Teacher" >
    update teacher
    <set >
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="gendar != null" >
        gendar = #{gendar,jdbcType=SMALLINT},
      </if>
      <if test="birthDate != null" >
        birth_date = #{birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enterDate != null" >
        enter_date = #{enterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ctgu.examination_system.entity.Teacher" >
    update teacher
    set teacher_id = #{teacherId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      gendar = #{gendar,jdbcType=SMALLINT},
      birth_date = #{birthDate,jdbcType=TIMESTAMP},
      enter_date = #{enterDate,jdbcType=TIMESTAMP},
      degree = #{degree,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>