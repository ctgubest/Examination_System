<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ctgu.examination_system.mapper.SelectedcourseMapper">
  <resultMap id="BaseResultMap" type="com.ctgu.examination_system.entity.Selectedcourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="score" jdbcType="REAL" property="score" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_id, teacher_id, course_id, score
  </sql>
  <select id="selectByExample" parameterType="com.ctgu.examination_system.entity.SelectedcourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from selectedcourse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from selectedcourse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from selectedcourse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ctgu.examination_system.entity.SelectedcourseExample">
    delete from selectedcourse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ctgu.examination_system.entity.Selectedcourse">
    insert into selectedcourse (id, student_id, teacher_id, 
      course_id, score)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, 
      #{courseId,jdbcType=INTEGER}, #{score,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ctgu.examination_system.entity.Selectedcourse">
    insert into selectedcourse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ctgu.examination_system.entity.SelectedcourseExample" resultType="java.lang.Integer">
    select count(*) from selectedcourse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update selectedcourse
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update selectedcourse
    set id = #{record.id,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ctgu.examination_system.entity.Selectedcourse">
    update selectedcourse
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ctgu.examination_system.entity.Selectedcourse">
    update selectedcourse
    set student_id = #{studentId,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      score = #{score,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!-- 自定义分页查询 -->
    <select id="findByPaging" parameterType="com.ctgu.examination_system.entity.PagingVO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from selectedcourse
        <where>
            <if test="userId!=null and userId!=''">
                AND student_id = #{userId}
            </if>
            <if test="keyWord!=null and keyWord!=''">
                <!--查询关键词和百分号之间必须空格，否则会出错-->
                AND course_name like '%' #{keyWord} '%'
            </if>
            <if test="Overed==true">
                AND score is not NULL
            </if>
        </where>
        limit #{toPageNo}, #{pageSize}
    </select>
</mapper>